#ifndef __CObjDetailData_h__
#define __CObjDetailData_h__

#include "ThreedVector.h"
#include "TextureCoordinate.h"

namespace objloader
{

/** @class  CObjDetailData
 *  @brief  OBJ詳細データクラス
 *  @author  Masakazu Yoshida(yoshida@iltj.jp)
 *  @version  1.0
 *  @date  2008/12/1 ... 新規作成
 *  @attention  Copyright (C) 2008, ILTJ Inc.
 */
class CObjDetailData
{
/*--------------*/
/* 公開メンバ   */
/*--------------*/
public:
  //*******************************************************************
  /*!
   *  @brief  デフォルトコンストラクタ
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  CObjDetailData(void);

  //*******************************************************************
  /*!
   *  @brief  デストラクタ
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  ~CObjDetailData(void);

  //*******************************************************************
  /*!
   *  @brief  頂点座標値の取得(配列)を行います。
   *  @return  double * ... 頂点座標値(配列)
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  double *getVertexCoordinates(void);

  //*******************************************************************
  /*!
   *  @brief  頂点X座標値の取得を行います。
   *  @return  double ... X座標値
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  double getVertexCoordinateX(void);

  //*******************************************************************
  /*!
   *  @brief  頂点Y座標値の取得を行います。
   *  @return  double ... Y座標値
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  double getVertexCoordinateY(void);

  //*******************************************************************
  /*!
   *  @brief  頂点Z座標値の取得を行います。
   *  @return  double ... Z座標値
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  double getVertexCoordinateZ(void);

  //*******************************************************************
  /*!
   *  @brief  テクスチャU座標値の取得を行います。
   *  @return  double ... U座標値
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  double getTextureCoordinateU(void);

  //*******************************************************************
  /*!
   *  @brief  テクスチャV座標値の取得を行います。
   *  @return  double ... V座標値
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  double getTextureCoordinateV(void);

  //*******************************************************************
  /*!
   *  @brief  法線座標値の取得(配列)を行います。
   *  @return  double * ... 法線座標値(配列)
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  double *getNormalCoordinates(void);

  //*******************************************************************
  /*!
   *  @brief  法線X座標値の取得を行います。
   *  @return  double ... 法線X座標値
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  double getNormalCoordinateX(void);

  //*******************************************************************
  /*!
   *  @brief  法線Y座標値の取得を行います。
   *  @return  double ... 法線Y座標値
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  double getNormalCoordinateY(void);

  //*******************************************************************
  /*!
   *  @brief  法線Z座標値の取得を行います。
   *  @return  double ... 法線Z座標値
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  double getNormalCoordinateZ(void);

  //*******************************************************************
  /*!
   *  @brief  頂点座標値の設定(配列指定)を行います。
   *  @param  pval ... [In] 頂点座標値(配列)
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  void setVertexCoordinate(const double *pval);

  //*******************************************************************
  /*!
   *  @brief  頂点座標値の設定(個別指定)を行います。
   *  @param  val_x ... [In] 頂点X座標値
   *  @param  val_y ... [In] 頂点Y座標値
   *  @param  val_z ... [In] 頂点Z座標値
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  void setVertexCoordinate(double val_x, double val_y, double val_z);

  //*******************************************************************
  /*!
   *  @brief  頂点座標値の設定(3Dベクトルクラスオブジェクト指定)を行います。
   *  @param  pval ... [In] 3Dベクトルクラスオブジェクト
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  void setVertexCoordinate(const CThreedVector *pval);

  //*******************************************************************
  /*!
   *  @brief  テクスチャ座標値の設定(配列指定)を行います。
   *  @param  pval ... [In] テクスチャ座標値(配列)
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  void setTextureCoordinate(const double *pval);

  //*******************************************************************
  /*!
   *  @brief  テクスチャ座標値の設定(個別指定)を行います。
   *  @param  val_u ... [In] テクスチャU座標値
   *  @param  val_v ... [In] テクスチャV座標値
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  void setTextureCoordinate(double val_u, double val_v);

  //*******************************************************************
  /*!
   *  @brief  テクスチャU座標値の設定を行います。
   *  @param  val ... [In] テクスチャU座標値
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  void setTextureCoordinateU(double val);

  //*******************************************************************
  /*!
   *  @brief  テクスチャV座標値の設定を行います。
   *  @param  val ... [In] テクスチャV座標値
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  void setTextureCoordinateV(double val);

  //*******************************************************************
  /*!
   *  @brief  法線座標値の設定(配列指定)を行います。
   *  @param  pval ... [In] 法線座標値(配列)
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  void setNormalCoordinate(const double *pval);

  //*******************************************************************
  /*!
   *  @brief  法線座標値の設定(個別指定)を行います。
   *  @param  val_x ... [In] 法線X座標値
   *  @param  val_y ... [In] 法線Y座標値
   *  @param  val_z ... [In] 法線Z座標値
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  void setNormalCoordinate(double val_x, double val_y, double val_z);

  //*******************************************************************
  /*!
   *  @brief  法線座標値の設定(3Dベクトルクラスオブジェクト)を行います。
   *  @param  pval ... [In] 3Dベクトルクラスオブジェクト
   *  @date  2008/12/1 ... 新規作成
   */
  //********************************************************************
  void setNormalCoordinate(const CThreedVector *pval);

/*--------------*/
/* 非公開メンバ */
/*--------------*/
private:
  CThreedVector vertexCoordinate;                // 頂点座標
  St_TextureCoordinate st_texture;               // テクスチャ構造体
  CThreedVector normalCoordinate;                // 法線座標
};
}
#endif
